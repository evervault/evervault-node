name: Test

on:
  push:
    branches:
      - '**'
      - '!master'
  pull_request:
    branches: master

jobs:
  run-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [12, 14, 16, 18]
        os: [ubuntu-latest]
        include:
          - perform-attestation: false
          - perform-attestation: true
            node-version: 18
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run lint
      - run: npm run test:coverage
      - run: |
          sudo apt-get update ; sudo apt-get install -y libfaketime
          LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1 npm run test:filter attestCageConnectionBeta
        env:
          FAKETIME: '2023-01-18 15:15:00'
        if: ${{ matrix.perform-attestation }}
      - run: |
          sudo apt-get update ; sudo apt-get install -y libfaketime
          LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1 npm run test:filter attestCageConnectionGA
        env:
          FAKETIME: '2023-09-22 11:24:32'
        if: ${{ matrix.perform-attestation }}
